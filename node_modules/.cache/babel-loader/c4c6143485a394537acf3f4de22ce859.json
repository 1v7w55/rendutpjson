{"ast":null,"code":"var _jsxFileName = \"/home/vr55/Documents/rendutp3/src/views/TP3/TP3form.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; //import { products } from \"../../../components/ProductList\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartForm(_ref) {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/cars\").then(response => response.json()).then(data => {\n      setProducts(data);\n    });\n  }, []);\n  const [itemId, setSelectedProduct] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    if (!itemId && products.length) {\n      setSelectedProduct(products[0].id);\n    }\n  }, [itemId, products]);\n\n  function handleSubmit(e) {\n    e.preventDefault(); // Récupération des valeurs du formulaire en JS natif\n    //const formData = new FormData(e.target);\n    //const itemId = parseInt(formData.get(\"product\"));\n    //const quantity = parseInt(formData.get(\"quantity\"));\n\n    onSubmit({\n      product: itemId,\n      quantity\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"product\",\n      onChange: e => setSelectedProduct(parseInt(e.target.value)),\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: product.id,\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"quantity\",\n      onChange: e => setQuantity(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartForm, \"2vz7Fo+ZurHYaucQokYilk8H+qw=\");\n\n_c = CartForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartForm\");","map":{"version":3,"names":["useEffect","useState","CartForm","onSubmit","products","setProducts","fetch","then","response","json","data","itemId","setSelectedProduct","quantity","setQuantity","length","id","handleSubmit","e","preventDefault","product","parseInt","target","value","map","name"],"sources":["/home/vr55/Documents/rendutp3/src/views/TP3/TP3form.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n//import { products } from \"../../../components/ProductList\";\n\nexport default function CartForm({ onSubmit }) {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/cars\")\n      .then((response) => response.json())\n      .then((data) => {\n        setProducts(data);\n      });\n  }, []);\n\n  const [itemId, setSelectedProduct] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!itemId && products.length) {\n      setSelectedProduct(products[0].id);\n    }\n  }, [itemId, products]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // Récupération des valeurs du formulaire en JS natif\n    //const formData = new FormData(e.target);\n    //const itemId = parseInt(formData.get(\"product\"));\n    //const quantity = parseInt(formData.get(\"quantity\"));\n    onSubmit({ product: itemId, quantity });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <select\n        name=\"product\"\n        onChange={(e) => setSelectedProduct(parseInt(e.target.value))}\n      >\n        {products.map((product) => (\n          <option key={product.id} value={product.id}>\n            {product.name}\n          </option>\n        ))}\n      </select>\n      <input\n        type=\"number\"\n        name=\"quantity\"\n        onChange={(e) => setQuantity(parseInt(e.target.value))}\n      />\n      <input type=\"submit\" value=\"Add to Cart\" />\n    </form>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;;AAEA,eAAe,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC7C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;MACdL,WAAW,CAACK,IAAD,CAAX;IACD,CAJH;EAKD,CANQ,EAMN,EANM,CAAT;EAQA,MAAM,CAACC,MAAD,EAASC,kBAAT,IAA+BX,QAAQ,CAAC,IAAD,CAA7C;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,MAAD,IAAWP,QAAQ,CAACW,MAAxB,EAAgC;MAC9BH,kBAAkB,CAACR,QAAQ,CAAC,CAAD,CAAR,CAAYY,EAAb,CAAlB;IACD;EACF,CAJQ,EAIN,CAACL,MAAD,EAASP,QAAT,CAJM,CAAT;;EAMA,SAASa,YAAT,CAAsBC,CAAtB,EAAyB;IACvBA,CAAC,CAACC,cAAF,GADuB,CAEvB;IACA;IACA;IACA;;IACAhB,QAAQ,CAAC;MAAEiB,OAAO,EAAET,MAAX;MAAmBE;IAAnB,CAAD,CAAR;EACD;;EAED,oBACE;IAAM,QAAQ,EAAEI,YAAhB;IAAA,wBACE;MACE,IAAI,EAAC,SADP;MAEE,QAAQ,EAAGC,CAAD,IAAON,kBAAkB,CAACS,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,CAAT,CAFrC;MAAA,UAIGnB,QAAQ,CAACoB,GAAT,CAAcJ,OAAD,iBACZ;QAAyB,KAAK,EAAEA,OAAO,CAACJ,EAAxC;QAAA,UACGI,OAAO,CAACK;MADX,GAAaL,OAAO,CAACJ,EAArB;QAAA;QAAA;QAAA;MAAA,QADD;IAJH;MAAA;MAAA;MAAA;IAAA,QADF,eAWE;MACE,IAAI,EAAC,QADP;MAEE,IAAI,EAAC,UAFP;MAGE,QAAQ,EAAGE,CAAD,IAAOJ,WAAW,CAACO,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,KAAV,CAAT;IAH9B;MAAA;MAAA;MAAA;IAAA,QAXF,eAgBE;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAC;IAA3B;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAjDuBrB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}